@model XCommsWeb.Models.CustomerViewModel
@using XCommsWeb.Models;
@using XCommsWeb.Classes;

@{
    ViewBag.Title = "Customer Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";

    XCommsWeb.MasterService MS = new XCommsWeb.MasterService();
    List<CYGNUS_Master_General> ListModules = MS.GetGeneralMasterList().Where(c => c.CodeType == "PERMISSIONTYPE" && c.StatusCode == "Y" && c.CodeId != "6").ToList();
    //List<CYGNUS_Master_General> ListModules = MS.GetGeneralMasterList().Where(c => c.CodeType == "PERMISSIONTYPE" && c.StatusCode == "Y").ToList();
    //authorsList = authorsList.Where(x => x.FirstName != "Bob").ToList();

    if (Model.StartDate == DateTime.MinValue || Model.StartDate == null && Model.ExpiresDate == DateTime.MinValue || Model.ExpiresDate == null)
    {
        Model.StartDate = DateTime.Now;
        Model.ExpiresDate = DateTime.Now;
    }
}

<style type="text/css">
    .invalid {
        color: red;
    }

    .hasbgcolor {
        color: red;
    }

    .jarviswidget .widget-body {
        box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px !important;
    }
</style>

<section id="widget-grid" class="">
    <div class="row">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-togglebutton="false">
                <header role="heading">
                    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                    @if (Model.CustomerId > 0)
                    {
                        <h2 style="width:auto !important;">Edit Customer Registration</h2>
                    }
                    else
                    {
                        <h2 style="width:auto !important;">New Customer Registration</h2>
                    }
                </header>
                <div class="widget-body">
                    @using (Html.BeginForm("SubmitCustomerRegistration", "Customer", FormMethod.Post, new { id = "contact-form", @class = "", enctype = "multipart/form-data" }))
                    {
                        <fieldset>
                            <div class="row smart-form">
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="checkbox">
                                        @Html.CheckBoxFor(c => c.Purchased, new { @class = "checkbox_check", placeholder = "", Name = "", @value = "Purchased" })
                                        <i></i>Purchased
                                    </label>
                                </section>
                                <section class="col col-6">
                                    <label class="checkbox">
                                        @Html.CheckBoxFor(c => c.Trail, new { @class = "checkbox_check", placeholder = " ", Name = "", @value = "Trial" })
                                        <i></i>Trial
                                    </label>
                                    @Html.HiddenFor(c => c.PurchasedTrial)
                                </section>
                            </div>
                            @*<div class="row smart-form">
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <span id="errorcust" style="color: #D56161;"></span>
                                </section>
                            </div>*@
                            <div class="row smart-form">
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Company Name <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-university txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.CompanyName, new { @class = "form-control required", placeholder = "Company Name", autocomplete = "off" })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Enter Name Of Company
                                        </b>
                                        @Html.HiddenFor(m => m.EditFlag)
                                        @Html.HiddenFor(m => m.CustomerId)
                                        @Html.HiddenFor(m => m.Password)
                                    </label>
                                </section>
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Full Name <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-user txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.FullName, new { @class = "form-control required ", placeholder = "Full Name", autocomplete = "off" })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Enter Full Name
                                        </b>
                                    </label>
                                </section>
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Company E-Mail <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-envelope txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.CompanyEmail, new { @class = "form-control required", placeholder = "Company E-Mail", autocomplete = "off" })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Enter Company E-Mail Address
                                        </b>
                                        <span id="companyerror" style="color: #D56161;"></span>
                                    </label>
                                </section>
                            </div>
                            <div class="row smart-form">
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Phone Number <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-phone-square txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.PhoneNumber, new { @class = "form-control required", placeholder = "Phone No.", @minlength = 10, @maxlength = 10, @onkeypress = "javascript:return validFloat(event,this.getAttribute('id'))", autocomplete = "off" })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Enter Contact Number
                                        </b>
                                    </label>
                                </section>
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Start Date <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-calendar txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.StartDate, String.Format("{0:dd MMM yyyy}", Model.StartDate), new { @class = "startdate-picker required", @readonly = true })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Select Start Date
                                        </b>
                                    </label>
                                </section>
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Expires Date <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-calendar txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.ExpiresDate, String.Format("{0:dd MMM yyyy}", Model.ExpiresDate), new { @class = "enddate-picker required", @readonly = true })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Select Expires Date
                                        </b>
                                    </label>
                                </section>
                            </div>
                            <div class="row smart-form">
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">Modules <span class="hasbgcolor">*</span> : </label>
                                    <label class="select">
                                        @Html.DropDownList("Module", new SelectList(ListModules, "CodeId", "CodeDesc"), "", new { @class = "form-control required required2  select2 clsdisabled", @multiple = "multiple", placeholder = "Select Module" })
                                        @Html.HiddenFor(c => c.ModuleId)
                                        @Html.HiddenFor(c => c.AccessLevel)
                                    </label>
                                </section>
                                <section class="col col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label class="label">License Count <span class="hasbgcolor">*</span> : </label>
                                    <label class="input">
                                        <i class="icon-append fa fa-info-circle txt-color-blue"></i>
                                        @Html.TextBoxFor(c => c.LicenseCount, new { @class = "form-control required", placeholder = "License Count", @onkeypress = "javascript:return validFloat(event,this.getAttribute('id'))", autocomplete = "off" })
                                        <b class="tooltip tooltip-top-right">
                                            <i class="fa fa-warning txt-color-teal"></i>
                                            Enter License Count
                                        </b>
                                    </label>
                                </section>
                            </div>
                        </fieldset>
                        <div class="form-actions">
                            <div class="clearfix"></div>
                            <div class="col-md-12">
                                <div class="pull-right">
                                    <ul class="demo-btns">
                                        <li>
                                            <a href="javascript:void(0);" id="btnSave" class="btn btn-labeled btn-success" rel="tooltip" title="" data-placement="bottom" data-original-title="Save">
                                                <span class="btn-label"><i class="fa fa-save"></i></span> Register
                                            </a>
                                        </li>
                                        <li>
                                            <a href="javascript:void(0);" id="bcktolist" class="btn btn-labeled btn-primary" rel="tooltip" title="" data-placement="bottom" data-original-title="Back To List">
                                                <span class="btn-label"><i class="fa fa-arrow-left"></i></span> Back To List
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </article>
    </div>
</section>

<script type="text/javascript">
    var FormComponents = function (DomainName) {

        var FormValidate = function (DomainName) {
            $("#contact-form").validate({
                rules: { },
                messages: { },
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });
        }

        var handleStartDatePicker = function () {
            $('.startdate-picker').datepicker({
                isRTL: App.isRTL(),
                format: "dd M yyyy ",
                showMeridian: true,
                autoclose: true,
                pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left"),
                todayBtn: true,
                startDate: new Date($('#StartDate').val())
            });
            $('body').removeClass("modal-open");
        }

        var handleEndDatePicker = function () {
            $('.enddate-picker').datepicker({
                isRTL: App.isRTL(),
                format: "dd M yyyy ",
                showMeridian: true,
                autoclose: true,
                pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left"),
                todayBtn: true,
                startDate: ($('#StartDate').val() ? new Date($('#StartDate').val()) : new Date()),
            });
            $('body').removeClass("modal-open");
        }

        return {
            init: function (DomainName) {
                FormValidate(DomainName);
                $('#Modules').select2();
                handleStartDatePicker();
                handleEndDatePicker();

                var values = $("#ModuleId").val() == "" ? "Select Module" : $("#ModuleId").val().split(',');

                $('#Module').val(values).change();

                $(document).on("change", "#Module", function () {
                    $("#ModuleId").val($(this).val());
                });

                $(document).on('click', 'input[type="checkbox"]', function () {
                    $('input[type="checkbox"]').not(this).prop('checked', false);
                    if ($('input.checkbox_check').is(':checked')) {
                        var value = $(this).val();
                        $('#PurchasedTrial').val(value);
                    }
                });

                $('#CompanyEmail').change(function () {
                    $.ajax({
                        url: DomainName + "/Customer/UniqueCompanyName?CompanyEmail=" + $('#CompanyEmail').val(),
                        cache: false,
                        type: 'POST',
                        success: function (data) {
                            if (data == 1) {
                                //$('#companyerror').text('Company Email already exist');

                                Swal.fire({
                                    title: "Entered Email-Id already exist, Please enter other Email !",
                                    text: "",
                                    icon: "error",
                                    confirmButtonText:
                                        '<i class="fa fa-thumbs-up"></i> Okay !',
                                    showCancelButton: false,
                                    cancelButtonColor: '#d33'
                                });
                                $('#CompanyEmail').val("");
                                $('#CompanyEmail').focus();
                                return false;
                            }
                            else {
                                $('#companyerror').text("");
                                $('#CompanyEmail').removeClass('invalid');
                                return true
                            }
                        }
                    });
                });

                $('#bcktolist').click(function () {
                    App.blockUI({ boxed: true });
                    window.location = DomainName + "/Customer/CustomerList";
                });


                $('.checkbox_check').click(function () {
                    var val = $(this).val();
                    if (val == 'Trial') {
                        $('#Purchased').prop('checked', false);
                        $('#Trail').prop('checked', true);
                        $('#PurchasedTrial').val(val);
                        $(".startdate-picker").datepicker("destroy")
                        $(".enddate-picker").datepicker("destroy")

                        var now = new Date(); now.setDate(now.getDate() + 30);
                        $("#StartDate").val($.datepicker.formatDate('dd M yy', new Date()));
                        $('#ExpiresDate').val($.datepicker.formatDate('dd M yy', now));
                    }
                    else if (val == 'Purchased') {
                        $('#Trial').prop('checked', false);
                        $('#Purchased').prop('checked', true);
                        $('#PurchasedTrial').val(val);
                        $(".startdate-picker").datepicker("destroy")
                        $(".enddate-picker").datepicker("destroy")
                        $("#StartDate").val($.datepicker.formatDate('dd M yy', new Date()));
                        $("#ExpiresDate").val($.datepicker.formatDate('dd M yy', new Date()));
                    }
                    else {
                        $('#Purchased').prop('checked', true);
                        $('#PurchasedTrial').val('Purchased');
                    }
                });

                function generateRandomString(lenth) {
                    var text = "";
                    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

                    for (var i = 0; i < lenth; i++)
                        text += possible.charAt(Math.floor(Math.random() * possible.length));

                    return text;
                }

                $("#btnSave").click(function () {

                    var SelectCount = 0;
                    $(".checkbox_check").each(function ()
                    {
                        if (this.checked)
                        {
                            SelectCount = SelectCount + 1;
                        }
                    });

                    if (SelectCount == 0)
                    {
                        //$('#errorcust').text("Please select at least one checkbox");
                        Swal.fire({
                            title: "Please select at least one checkbox !",
                            text: "",
                            icon: "error",
                            confirmButtonText:
                                '<i class="fa fa-thumbs-up"></i> Okay !',
                            showCancelButton: false,
                            cancelButtonColor: '#d33'
                        });
                        return false;
                     }
                    else
                    {
                        //$('#errorcust').text("");
                        if ($('#contact-form').valid()) {
                            App.blockUI({ boxed: true });
                            $("#Password").val(generateRandomString(6));
                            document.forms["contact-form"].submit();
                        }
                        else {
                            return false
                        }
                    }

                });

                if('@Model.CustomerId'>0)
                {
                    $('#CompanyEmail').prop('readonly', true);
                }

                if ('@ViewBag.IsExpired' == 1) {
                     $('#btnSave ').hide();
                }

            }
        }
    }();
</script>